<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2021-01-26 Tue 10:26 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Automaten und Sprache</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="Adrian Eichelbaum" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="content">
<h1 class="title">Automaten und Sprache</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#org11fb12f">1. Eine Schatzsuche</a>
<ul>
<li><a href="#orgbc915db">1.1. Behauptung 1</a></li>
<li><a href="#orgf73fa1d">1.2. Behauptung 2</a></li>
</ul>
</li>
<li><a href="#orga063442">2. Endliche Automaten</a>
<ul>
<li><a href="#org7365d43">2.1. Formale Definition</a>
<ul>
<li><a href="#org6959383">2.1.1. Treasure Island</a></li>
</ul>
</li>
<li><a href="#orgd9f2301">2.2. Übung</a></li>
<li><a href="#org6cd997f">2.3. Mealy-Automat</a>
<ul>
<li><a href="#orgcecdba4">2.3.1. Übung Alphabet Σ</a></li>
<li><a href="#orgbd6379f">2.3.2. Übung Bonbon 2</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#orgb70f762">3. DEA &amp; NDA</a>
<ul>
<li><a href="#org308cd65">3.1. Deterministische endliche Automaten</a>
<ul>
<li><a href="#org0152c49">3.1.1. Formale Definition</a></li>
<li><a href="#org62ad44f">3.1.2. Beispiel Kaffeevollautomat</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<style>
@import url(https://adrsrv.duckdns.org/assets/css/style.css);
</style>

<div id="outline-container-org11fb12f" class="outline-2">
<h2 id="org11fb12f"><span class="section-number-2">1</span> Eine Schatzsuche</h2>
<div class="outline-text-2" id="text-1">
<p>
PI -a-&gt;SB-a-&gt;MH-a-&gt;PI
</p>

<p>
PI-b-&gt;MH-b-&gt;MI-b-&gt;SB-b-&gt;DI-&gt;SB-&#x2026;.
</p>

<p>
<b>PI-b-&gt;MH-b-&gt;MI-a-&gt;SC-b-&gt;TI</b>
</p>
</div>

<div id="outline-container-orgbc915db" class="outline-3">
<h3 id="orgbc915db"><span class="section-number-3">1.1</span> Behauptung 1</h3>
<div class="outline-text-3" id="text-1-1">
<p>
a) 
</p>
<ul class="org-ul">
<li>stuck at deadmans und shipwreck</li>
<li>PI -&gt; 4*(SB -&gt; DI) -&gt; MH -&gt; MI -&gt; SC -&gt; TI</li>
</ul>

<p>
b) 
</p>
<ul class="org-ul">
<li>MH</li>
<li>MI</li>
</ul>
</div>
</div>

<div id="outline-container-orgf73fa1d" class="outline-3">
<h3 id="orgf73fa1d"><span class="section-number-3">1.2</span> Behauptung 2</h3>
<div class="outline-text-3" id="text-1-2">
<ul class="org-ul">
<li>Falsch, landet nach seiner Folge wieder auf Start</li>
</ul>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<tbody>
<tr>
<td class="org-left">Insel</td>
<td class="org-left">A</td>
<td class="org-left">B</td>
</tr>

<tr>
<td class="org-left">PI (q0)</td>
<td class="org-left">q1</td>
<td class="org-left">q2</td>
</tr>

<tr>
<td class="org-left">q2</td>
<td class="org-left">q0</td>
<td class="org-left">&#xa0;</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>

<div id="outline-container-orga063442" class="outline-2">
<h2 id="orga063442"><span class="section-number-2">2</span> Endliche Automaten</h2>
<div class="outline-text-2" id="text-2">
<p>
<b>Automat:</b> Maschine, die vorbestimmte Abläufe sebsttätig ausführt
</p>

<ul class="org-ul">
<li>Eingabe aus (zulässigen) Alphabet</li>
<li>Verarbeitung der EIngabe und Übergänge in nächsten (anderen) Zustand</li>
<li>i.d.R. Ausgabe</li>
</ul>
</div>

<div id="outline-container-org7365d43" class="outline-3">
<h3 id="org7365d43"><span class="section-number-3">2.1</span> Formale Definition</h3>
<div class="outline-text-3" id="text-2-1">
<p>
6-Tupel (Q, s, Ɛ, Ω, δ, ƛ)
</p>

<p>
Q &#x2026; <b>endliche</b> Menge aus Zuständen
</p>

<p>
s ∊ Q &#x2026; <b>Startzustand</b>
</p>

<p>
Σ &#x2026; endliches <b>EIngabealphabet</b>
</p>

<p>
Ω &#x2026; edliches <b>Ausgabealphabet</b>
</p>

<p>
δ : Q x Σ -&gt; Q &#x2026; <b>Pbergangsfunktion</b>
</p>

<p>
λ: Q x Σ -&gt; Ω &#x2026; <b>Ausgabefunktion</b>
</p>
</div>

<div id="outline-container-org6959383" class="outline-4">
<h4 id="org6959383"><span class="section-number-4">2.1.1</span> Treasure Island</h4>
<div class="outline-text-4" id="text-2-1-1">
<p>
Q = {q0,q1,q2,q3,q4,q5,q6}
</p>

<p>
s = q0
</p>

<p>
Ɛ = {A,B}
</p>

<p>
Ω = {Schatz}
</p>

<p>
δ = Tabelle aus Hausaufgabe, wohin führt eine Eingabe in einem bestimmten Zustand
</p>

<p>
λ = Tabelle, hier steht aber nur in iner Zeile etwas, da öman ansonsten nicht zum Schatz, der Ausgabe, kommt (bei q5, B)
</p>
</div>
</div>
</div>

<div id="outline-container-orgd9f2301" class="outline-3">
<h3 id="orgd9f2301"><span class="section-number-3">2.2</span> Übung</h3>
<div class="outline-text-3" id="text-2-2">
<p>
Stellen SIe sich einen einfachen Bonbonautomaten vor, BEstimmen Sie Ɛ, Ω, Q und s
</p>

<p>
q0 = keine Münze
q1 = (eine) Münze
M = Münze einwerfen
H = Drehen
B = Bonbon
</p>

<p>
Q = {q0,q1}
s = q0
Ɛ = {M,H}
Ω = {B}
</p>

<p>
δ = 
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">&#xa0;</th>
<th scope="col" class="org-left">M</th>
<th scope="col" class="org-left">H</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">q0</td>
<td class="org-left">q1</td>
<td class="org-left">q0</td>
</tr>

<tr>
<td class="org-left">q1</td>
<td class="org-left">q1</td>
<td class="org-left">q0</td>
</tr>
</tbody>
</table>

<p>
λ = 
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">&#xa0;</th>
<th scope="col" class="org-left">M</th>
<th scope="col" class="org-left">H</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">q0</td>
<td class="org-left">-</td>
<td class="org-left">-</td>
</tr>

<tr>
<td class="org-left">q1</td>
<td class="org-left">-</td>
<td class="org-left">B</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-org6cd997f" class="outline-3">
<h3 id="org6cd997f"><span class="section-number-3">2.3</span> Mealy-Automat</h3>
<div class="outline-text-3" id="text-2-3">
<ul class="org-ul">
<li>Graphische Darstellung siehe Hefter</li>
<li>Pfeile sollten sich nicht Kreuzen</li>
<li>Startzustand wird mit Pfeil ohne Weiteres Kennzeichnet</li>
<li>nur bei deisem Automaten stehen Eingabe und Ausgbe am Pfeil</li>
</ul>
</div>

<div id="outline-container-orgcecdba4" class="outline-4">
<h4 id="orgcecdba4"><span class="section-number-4">2.3.1</span> Übung Alphabet Σ</h4>
<div class="outline-text-4" id="text-2-3-1">
<p>
a) {a,b,c,,}
b) {A,B,a,b}
c) {a}
d) {(,),+,a,b,*,2}
e) {0,1}
f) {I,V,X,,}
g) {1,0,2,4}
</p>
</div>
</div>

<div id="outline-container-orgbd6379f" class="outline-4">
<h4 id="orgbd6379f"><span class="section-number-4">2.3.2</span> Übung Bonbon 2</h4>
<div class="outline-text-4" id="text-2-3-2">
<p>
S = Saures Bonbon
B = Süßes Bonbon
10 = 10 cent
20 = 20 cent
HR = Hebel rechts ziehen
HL = Hebel links ziehen
q0 = Keine Münze
q1 = 10 cent
q2 = 20 cent
</p>

<p>
Q = {q0, q1, q2}
</p>

<p>
s = q0
</p>

<p>
Σ = {10,20,HL,HR}
</p>

<p>
Ω = {S,B}
</p>

<p>
δ = 
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">&#xa0;</th>
<th scope="col" class="org-left">10</th>
<th scope="col" class="org-left">20</th>
<th scope="col" class="org-left">HR</th>
<th scope="col" class="org-left">HL</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">q0</td>
<td class="org-left">q1</td>
<td class="org-left">q2</td>
<td class="org-left">q0</td>
<td class="org-left">q0</td>
</tr>

<tr>
<td class="org-left">q1</td>
<td class="org-left">q2</td>
<td class="org-left">q1</td>
<td class="org-left">q1</td>
<td class="org-left">q1</td>
</tr>

<tr>
<td class="org-left">q2</td>
<td class="org-left">q2</td>
<td class="org-left">q2</td>
<td class="org-left">q0</td>
<td class="org-left">q0</td>
</tr>
</tbody>
</table>

<p>
λ = 
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">&#xa0;</th>
<th scope="col" class="org-left">10</th>
<th scope="col" class="org-left">20</th>
<th scope="col" class="org-left">HR</th>
<th scope="col" class="org-left">HL</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">q0</td>
<td class="org-left">-</td>
<td class="org-left">-</td>
<td class="org-left">-</td>
<td class="org-left">-</td>
</tr>

<tr>
<td class="org-left">q1</td>
<td class="org-left">-</td>
<td class="org-left">-</td>
<td class="org-left">-</td>
<td class="org-left">-</td>
</tr>

<tr>
<td class="org-left">q2</td>
<td class="org-left">-</td>
<td class="org-left">-</td>
<td class="org-left">B</td>
<td class="org-left">S</td>
</tr>
</tbody>
</table>

<p>
Grapgh siehe Opal
</p>
</div>
</div>
</div>
</div>

<div id="outline-container-orgb70f762" class="outline-2">
<h2 id="orgb70f762"><span class="section-number-2">3</span> DEA &amp; NDA</h2>
<div class="outline-text-2" id="text-3">
</div>
<div id="outline-container-org308cd65" class="outline-3">
<h3 id="org308cd65"><span class="section-number-3">3.1</span> Deterministische endliche Automaten</h3>
<div class="outline-text-3" id="text-3-1">
<ul class="org-ul">
<li>kurz DEA</li>
<li><b>deterministisch:</b> in jedem Zustand existiert für jedes Eingabezeichen <b>genau ein</b> Folgezustand</li>
<li>entscheidet, ob Eingabe korrekt ist oder nicht</li>
<li>Anwenungsbeispiel: entscheiden, ob Kafeesazbehälter im Kaffeevollautomaten geleert werden muss</li>
</ul>
</div>

<div id="outline-container-org0152c49" class="outline-4">
<h4 id="org0152c49"><span class="section-number-4">3.1.1</span> Formale Definition</h4>
<div class="outline-text-4" id="text-3-1-1">
<p>
5-Tupel(Q, s, Σ, F, δ)
</p>

<p>
Q &#x2026; <b>endliche</b> Menge von Zuständen
</p>

<p>
s ∊ Q &#x2026; <b>Startzustand</b>
</p>

<p>
Σ &#x2026; endliches <b>Eingabealphabet</b>
</p>

<p>
F &#x2026; Menge der <b>akyeptierenden Endzustände</b>, es gilt F c (Teilmenge, mathematisches ZEichen) Q
</p>

<p>
δ: Q x Σ -&gt; Q &#x2026; <b>Übergangsfunktion</b>
</p>
</div>
</div>

<div id="outline-container-org62ad44f" class="outline-4">
<h4 id="org62ad44f"><span class="section-number-4">3.1.2</span> Beispiel Kaffeevollautomat</h4>
<div class="outline-text-4" id="text-3-1-2">
<ul class="org-ul">
<li>Beschreibung siehe Blatt</li>
</ul>
</div>
</div>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="author">Author: Adrian Eichelbaum</p>
<p class="date">Created: 2021-01-26 Tue 10:26</p>
<p class="validation"><a href="http://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
